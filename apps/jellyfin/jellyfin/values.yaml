replicaCount: 1

image:
  repository: ghcr.io/jellyfin/jellyfin
  pullPolicy: IfNotPresent
  tag: "2025102005"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  type: ClusterIp
  port: 8096

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: "nginx"
  annotations: {}
  hosts:
    - host: homelab.com
      paths:
        - path: /jelly
          pathType: prefix
  tls: []

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: media
    hostPath:
      path: /storage/media
      type: Directory
  - name: config
    hostPath: 
      path: /storage/pvs/jellyfin-config
      type: DirectoryOrCreate
  - name: cache
    hostPath: 
      path: /storage/pvs/jellyfin-cache
      type: DirectoryOrCreate

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: media
    mountPath: /media
    readOnly: true
  - name: config
    mountPath: /config
    readOnly: false
  - name: cache
    mountPath: /cache
    readOnly: false

nodeSelector: {}

tolerations: []

affinity: {}
